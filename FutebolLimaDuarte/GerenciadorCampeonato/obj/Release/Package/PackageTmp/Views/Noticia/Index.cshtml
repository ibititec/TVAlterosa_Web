@using CORE.Componentes
@using Kendo.Mvc.UI
@using System.Web
@model IEnumerable<Campeonato.Dominio.Jogador_Web>

@{
    ViewBag.Title = "Manutenção Notícia";
}

@{
    ViewBag.Title = "Manutenção Notícia";
    var breadCrumbs = new List<KeyValuePair<string, string>>();
    breadCrumbs.Add(new KeyValuePair<string, string>("/AdminHome/Index", "Home"));
    breadCrumbs.Add(new KeyValuePair<string, string>("#", ViewBag.Title));
    ViewBag.Breadcrumbs = breadCrumbs;
}

<div class="row">
    <div class="col-md-12">
        @Html.MessageBoxes(TempData["successMessage"], Html.ValidationMessage(""))
    </div>
    <div class="col-md-12">
        @(Html.KendoGrid<Campeonato.Dominio.Noticia_Web>("noticiaGrid")
                .ToolbarLimpar("gridAllFilterReset")
                //.ToolbarExportarExcel("Exportar", "Jogadores.xls")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Id).Visible(false);
                    columns.Bound(p => p.DataNoticia).Visible(false);
                    columns.Bound(p => p.Titulo).Title("Título").Width(150);
                    columns.Bound(p => p.Noticia).Title("Notícia").Width(900);
                    columns.Bound(p => p.DataNoticiaString).Title("Data Notícia").Width(110);                                       
                })
                .Editable(ed =>
                {
                    ed.Mode(GridEditMode.PopUp)
                        .Window(w => w.Title("Manutenção de Notícia").Width(450));
                })
               .Pageable(i => i.PageSizes(new int[] { 25, 50, 100 }))
               .DataSource(dataSource =>
               {
                   dataSource
                    .Ajax()
                    .Sort(sort => sort.Add(p => p.Id).Ascending())
                    .PageSize(25)
                    .Events(events => events.Error("error_handler").Sync("sync_handler").RequestEnd("onRequestEnd"))
                    .Model(model =>
                    {
                        model.Id(p => p.Id);
                    })
                    .Read(read => read.Action("Ler", "NoticiaWeb"))
                    .Create(update => update.Action("Inserir", "NoticiaWeb"))
                    .Update(update => update.Action("Atualizar", "NoticiaWeb"))
                    .Destroy(update => update.Action("Apagar", "NoticiaWeb"));
               }))
    </div>
</div>

<script>
    $(document).ready(function () {
        hideErrorMessage();
        hideSuccessMessage();
    });
</script>